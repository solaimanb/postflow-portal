rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if a user is an admin
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/authorized_users/$(request.auth.token.email)) &&
             get(/databases/$(database)/documents/authorized_users/$(request.auth.token.email)).data.role == 'admin';
    }
    
    // Only authenticated and authorized admin users can access any data by default
    match /{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Rules for authorized_users collection - allow reads for authentication
    match /authorized_users/{email} {
      // Allow reading for authentication purposes
      allow read: if true;
      // Only admins can write to authorized_users
      allow write: if isAdmin();
    }
    
    // Rules for topics collection
    match /topics/{topicId} {
      allow read, write: if isAdmin();
    }
    
    // Rules for posts collection
    match /posts/{postId} {
      allow read, write: if isAdmin();
    }
    
    // Rules for facebook_pages collection - allow all operations without auth
    match /facebook_pages/{pageId} {
      allow read, write: if request.auth != null || !request.auth;
    }
    
    // Rules for scheduled_posts collection
    match /scheduled_posts/{postId} {
      allow read, write: if true;
    }
  }
} 